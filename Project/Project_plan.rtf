{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12600\viewh13880\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 Python project: py_plasmaplotting\
\
Purpose:\
To read several *.plt files (a custom fixed format text file) produced by a NLTE plasma code, and create a data exploration/visualization framework that will quickly allow the user to do the following things:\
*Plot a spectrum from spectral data in the form of a heatplot with spectra as a function of time\
*Print out a list of simulation parameters (what was inputted into the simulation)\
*Print out how all the paramters vary in time (the putput of the simulation)\
*Create comparisons between different simulations in a visual way, basically publishable quality auto-plotting given filenames and variable to compare\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 BONUS: \
*3d or animation\
*Calculate what atoms were used, and give a list of atomic states (compicated due to output formatting)\
SUPERBONUS:\
*Create inputfiles for the code, manage runs at a cluster running sbatch\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
Use case for the group:\
Create publication quality plots while doing data exploration\
Compare spectra from different simulation runs to allow calibration (subtract background)\
Parse outputfiles and create text files in a more modern format readable by e.g gnuplot (csv instead of fixed format)\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 INPUT: *.plt and *.tbl files (fixed format files with that is output from a simulation running on clusters)\
OUTPUT: *plain text files that are csv or other format readable by gnuplot, image files with annotation\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
STRUCTURE OF CODE:\
\
PLTparser\
input: path to plt-file\
returns Simulation object\
\
Simulation\
init_method: use PLTparser\
attr: energy\
attr: intensity (same for all timestes)\
attr: list of layers\
method: calculate_plasma_parameters\
method: create_nice_plots\
method: output_text\
\
Layer\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 attr: list of timesteps\
attr: material\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
Timestep\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 attr: temperature (vary with timestep)\
attr: spectrum\
attr: ionization_state\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
Comparison\
attr: comparison_variable\
method: create_nice_plot\
method: output_text\
\
Use case:\
Bob have a few *.plt files that contain different simulations of materials exposed to high intensity X-rays. He wants to see if the temperature is the same for the different materials, so he imports the py_plasmaplotting package. With the built in functions, it is simple to output and save a plot that show the temperature development as a function of time, with nicely labelled lines with the material name. One of the materials is background, so when he want to plot the spectrum he can specify which file that contain a simulation of the spectrum to subtract. His collegue Bob2 that don\'92t have python require the difference spectra as a csv file, with very exact formatting requirements that require interpolation  to get for example exactly 100 timesteps even if the simulation contain only 50 steps spanning the same real time.  \
}